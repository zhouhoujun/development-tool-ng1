{"version":3,"sources":["index.ts"],"names":["_","require","development_core_1","clean_1","serve_1","test_1","WebDefine","prototype","getContext","config","option","asserts","extend","ts","js","bindingConfig","tasks","ctx","Clean","StartServer","KarmaTest","env","test","pop","findTasks","__decorate","taskdefine","exports"],"mappings":"sgBACYA,EAACC,QAAM,UACnBC,mBAAAD,QAA4F,oBAC5FE,QAAAF,QAAsB,iBACtBG,QAAAH,QAA4B,iBAC5BI,OAAAJ,QAA0B,gBAM1BK,UAAA,WAAA,QAAAA,MAwBA,MAvBIA,GAAAC,UAAAC,WAAA,SAAWC,GAQP,MANAA,GAAOC,OAAOC,QAAUX,EAAEY,QACtBC,GAAI,wBACJC,GAAI,yBACLL,EAAOC,OAAOC,SAGVT,mBAAAa,cAAcN,IAGzBH,EAAAC,UAAAS,MAAA,SAAMC,GACF,GAAID,IACAb,QAAAe,MACAd,QAAAe,YACAd,OAAAe,UAKJ,OAHIH,GAAII,IAAIC,QAAS,GAA0B,UAAjBL,EAAII,IAAIC,MAClCN,EAAMO,MAEHN,EAAIO,UAAUR,IAtB7BV,EAAAmB,YAACvB,mBAAAwB,oDACYC,SAAArB,UAASA","file":"../index.js","sourcesContent":["/// <reference types=\"mocha\"/>\r\nimport * as _ from 'lodash';\r\nimport { ITask, ITaskConfig, bindingConfig, ITaskContext, IContextDefine, taskdefine } from 'development-core';\r\nimport { Clean } from './tasks/clean';\r\nimport { StartServer } from './tasks/serve';\r\nimport { KarmaTest } from './tasks/test';\r\n\r\nexport * from './WebTaskOption';\r\n\r\n\r\n@taskdefine\r\nexport class WebDefine implements IContextDefine {\r\n    getContext(config: ITaskConfig): ITaskContext {\r\n        // register default asserts.\r\n        config.option.asserts = _.extend({\r\n            ts: 'development-assert-ts',\r\n            js: 'development-assert-js'\r\n        }, config.option.asserts);\r\n\r\n\r\n        return bindingConfig(config);\r\n    }\r\n\r\n    tasks(ctx: ITaskContext): Promise<ITask[]> {\r\n        let tasks = [\r\n            Clean,\r\n            StartServer,\r\n            KarmaTest\r\n        ];\r\n        if (ctx.env.test === false || ctx.env.test === 'false') {\r\n            tasks.pop();\r\n        }\r\n        return ctx.findTasks(tasks);\r\n        // return ctx.findTasksInDir(path.join(__dirname, './tasks'));\r\n    }\r\n}\r\n"]}