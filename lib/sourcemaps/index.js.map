{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,8BAA8B;AAC9B,0BAA4B;AAC5B,qDAA+G;AAC/G,uCAAsC;AACtC,uCAA4C;AAC5C,qCAAyC;AAMzC,IAAa,SAAS;IAAtB;IAyBA,CAAC;IAxBG,8BAAU,GAAV,UAAW,MAAmB;QAC1B,4BAA4B;QAC5B,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;YAC7B,EAAE,EAAE,uBAAuB;YAC3B,EAAE,EAAE,uBAAuB;SAC9B,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAG1B,MAAM,CAAC,gCAAa,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,yBAAK,GAAL,UAAM,GAAiB;QACnB,IAAI,KAAK,GAAG;YACR,aAAK;YACL,mBAAW;YACX,gBAAS;SACZ,CAAC;QACF,IAAI,MAAM,GAAmB,GAAG,CAAC,MAAM,CAAC;QACxC,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;YACnF,KAAK,CAAC,GAAG,EAAE,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC5B,8DAA8D;IAClE,CAAC;IACL,gBAAC;AAAD,CAzBA,AAyBC,IAAA;AAzBY,SAAS;IADrB,6BAAU;;GACE,SAAS,CAyBrB;AAzBY,8BAAS","file":"../index.js","sourcesContent":["/// <reference types=\"mocha\"/>\r\nimport * as _ from 'lodash';\r\nimport { ITask, ITaskConfig, bindingConfig, ITaskContext, IContextDefine, taskdefine } from 'development-core';\r\nimport { Clean } from './tasks/clean';\r\nimport { StartServer } from './tasks/serve';\r\nimport { KarmaTest } from './tasks/test';\r\nimport { IWebTaskOption } from './WebTaskOption';\r\nexport * from './WebTaskOption';\r\n\r\n\r\n@taskdefine\r\nexport class WebDefine implements IContextDefine {\r\n    getContext(config: ITaskConfig): ITaskContext {\r\n        // register default asserts.\r\n        config.option.asserts = _.extend({\r\n            ts: 'development-assert-ts',\r\n            js: 'development-assert-js'\r\n        }, config.option.asserts);\r\n\r\n\r\n        return bindingConfig(config);\r\n    }\r\n\r\n    tasks(ctx: ITaskContext): Promise<ITask[]> {\r\n        let tasks = [\r\n            Clean,\r\n            StartServer,\r\n            KarmaTest\r\n        ];\r\n        let option: IWebTaskOption = ctx.option;\r\n        if (option.forceTest === false || ctx.env.test === false || ctx.env.test === 'false') {\r\n            tasks.pop();\r\n        }\r\n        return ctx.findTasks(tasks);\r\n        // return ctx.findTasksInDir(path.join(__dirname, './tasks'));\r\n    }\r\n}\r\n"]}