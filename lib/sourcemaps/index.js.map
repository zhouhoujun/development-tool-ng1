{"version":3,"sources":["index.ts"],"names":["_","require","development_core_1","clean_1","serve_1","test_1","WebDefine","prototype","getContext","config","option","asserts","extend","ts","js","bindingConfig","tasks","ctx","Clean","StartServer","KarmaTest","env","test","pop","findTasks","__decorate","taskdefine","exports"],"mappings":"6aACA,IAAAA,GAAAC,QAAA,UACAC,mBAAAD,QAAA,oBACAE,QAAAF,QAAA,iBACAG,QAAAH,QAAA,iBACAI,OAAAJ,QAAA,gBAMaK,UAAS,WAAtB,QAAAA,MAwBA,MAvBIA,GAAAC,UAAAC,WAAA,SAAWC,GAQP,MANAA,GAAOC,OAAOC,QAAUX,EAAEY,QACtBC,GAAI,wBACJC,GAAI,yBACLL,EAAOC,OAAOC,SAGVT,mBAAAa,cAAcN,IAGzBH,EAAAC,UAAAS,MAAA,SAAMC,GACF,GAAID,IACAb,QAAAe,MACAd,QAAAe,YACAd,OAAAe,UAKJ,OAHIH,GAAII,IAAIC,QAAS,GAA0B,UAAjBL,EAAII,IAAIC,MAClCN,EAAMO,MAEHN,EAAIO,UAAUR,IAG7BV,IAxBaA,WAASmB,YADrBvB,mBAAAwB,YACYpB,WAAAqB,QAAArB,UAAAA","file":"../index.js","sourcesContent":["/// <reference types=\"mocha\"/>\nimport * as _ from 'lodash';\nimport { ITask, ITaskConfig, bindingConfig, ITaskContext, IContextDefine, taskdefine } from 'development-core';\nimport { Clean } from './tasks/clean';\nimport { StartServer } from './tasks/serve';\nimport { KarmaTest } from './tasks/test';\n\nexport * from './WebTaskOption';\n\n\n@taskdefine\nexport class WebDefine implements IContextDefine {\n    getContext(config: ITaskConfig): ITaskContext {\n        // register default asserts.\n        config.option.asserts = _.extend({\n            ts: 'development-assert-ts',\n            js: 'development-assert-js'\n        }, config.option.asserts);\n\n\n        return bindingConfig(config);\n    }\n\n    tasks(ctx: ITaskContext): Promise<ITask[]> {\n        let tasks = [\n            Clean,\n            StartServer,\n            KarmaTest\n        ];\n        if (ctx.env.test === false || ctx.env.test === 'false') {\n            tasks.pop();\n        }\n        return ctx.findTasks(tasks);\n        // return ctx.findTasksInDir(path.join(__dirname, './tasks'));\n    }\n}\n"]}