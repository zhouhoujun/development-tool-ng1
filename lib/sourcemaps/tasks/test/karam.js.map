{"version":3,"sources":["tasks/test/karam.ts"],"names":[],"mappings":";AAAA,wBAAuB,OAAO,CAAC,CAAA;AAG/B,MAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAG7B,iBAAS,CAAC,IAAU,EAAE,MAAkB;IAEpC,IAAI,MAAM,GAAkB,MAAM,CAAC,MAAM,CAAC;IAC1C,IAAI,eAAe,GAAG,MAAM,CAAC,eAAe,IAAI,iBAAiB,CAAA;IACjE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACpC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IAClE,CAAC;IAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ;QACvB,IAAI,cAAM,CAAC;YACP,UAAU,EAAE,eAAe;SAC9B,EAAE,QAAQ,CAAC,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","file":"../../../tasks/test/karam.js","sourcesContent":["import { Server } from 'karma';\r\nimport { Gulp } from 'gulp';\r\nimport { TaskConfig } from 'development-tool';\r\nimport * as path from 'path';\r\nimport { WebTaskOption } from '../../task';\r\n\r\nexport = (gulp: Gulp, config: TaskConfig) => {\r\n\r\n    let option: WebTaskOption = config.option;\r\n    let karmaConfigFile = option.karmaConfigFile || './karma.conf.js'\r\n    if (!path.isAbsolute(karmaConfigFile)) {\r\n        karmaConfigFile = path.join(config.env.root, karmaConfigFile);\r\n    }\r\n\r\n    gulp.task('test', (callback) => {\r\n        new Server({\r\n            configFile: karmaConfigFile\r\n        }, callback).start();\r\n    });\r\n};\r\n"]}