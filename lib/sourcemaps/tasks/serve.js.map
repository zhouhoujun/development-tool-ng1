{"version":3,"sources":["tasks/serve.js"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","_typeof","decorate","i","defineProperty","__metadata","k","v","metadata","_","development_core_1","require","browserSync","StartServer","info","_classCallCheck","this","_createClass","value","name","files","option","serverFiles","isFunction","ctx","dist","getDist","getInfo","baseDir","serverBaseDir","push","browsersyncOption","server","port","process","env","PORT","browsersync","tkn","subTaskName","open","err","bs","extend","parallel","oper","Operation","default","serve","gulp","callback","exports"],"mappings":"AAAA,+kBACIA,WAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,GAA2HC,GAAvHC,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIJ,EAAkB,OAATE,EAAgBA,EAAOM,OAAOC,yBAAyBT,EAAQC,GAAOC,CACrH,IAAuB,YAAnB,mBAAOQ,SAAP,YAAAC,QAAOD,WAAoD,kBAArBA,SAAQE,SAAyBL,EAAIG,QAAQE,SAASb,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIW,GAAId,EAAWO,OAAS,EAAGO,GAAK,EAAGA,KAASV,EAAIJ,EAAWc,MAAIN,GAAKH,EAAI,EAAID,EAAEI,GAAKH,EAAI,EAAID,EAAEH,EAAQC,EAAKM,GAAKJ,EAAEH,EAAQC,KAASM,EAChJ,OAAOH,GAAI,GAAKG,GAAKC,OAAOM,eAAed,EAAQC,EAAKM,GAAIA,GAE5DQ,WAA0C,SAAUC,EAAGC,GANvDnB,GAAc,YAAdA,mBAAAA,SAAAA,YAAAA,QAAAA,WAAoDC,kBAAzBD,SAAeoB,SAAsBlB,MAAQC,SAA9BiB,SAAyCF,EAAAC,IACnFE,EAA0BZ,QAAI,UAA9Ba,mBAAAC,QAAA,oBACAC,YAAWZ,QAAP,gBACkDa,YAAAA,WAAjD,QAAAA,GACMC,GAAJC,gBAAAC,KAAAH,GAJXG,KAAAF,KAAAA,EAG0D,MAAAG,cAAAJ,IAAAtB,IAAA,UAAA2B,MAAA,WAMhDP,MAHVK,MAAAF,KAAAK,KAAAH,KAAAF,KAAAK,MAAA,YAGUR,KAAQG,QANwCvB,IAAA,QAAA2B,MAAA,SAQpDN,EAAAA,GACFC,GAAAA,GAAAA,EAAAA,OACAO,EAAA,IAAkBC,GAAAC,cAWVF,EAAQX,EAAEc,WAAWF,EAAOC,aAAeD,EAAOC,YAAYE,GAAOH,EAAOC,aATnFF,EAAAA,KAYG,IAAIK,GAAOD,EAAIE,QAAQV,KAAKW,WAfhCC,EAAA,IAAAA,GAAAP,EAAAQ,cAAApB,EAAAc,WAIUF,EAAAQ,eAAAR,EAAAQ,cAAAL,GAAAH,EAAAQ,cAGTJ,EAPDL,EAAAU,KAAAL,EAAA,QAAA,IAAAM,IASIC,QACIZ,QAAQQ,GAERR,MAAAA,EACHa,KAAAC,QAAAC,IAAAC,MAAA,IACDhB,MAAAA,EAEAC,GAAIO,cACJG,EAAWF,EAAAA,OAAeE,EAAAtB,EAAAc,WAAAF,EAAAgB,aAAAhB,EAAAgB,YAAAb,EAAAO,GAAAV,EAAAgB,aAEzB,IAAAC,GAFDd,EAGKe,YAAAvB,KAAAF,KAQD0B,OAPAZ,GAAAA,KAAAA,EAAAA,SAAAA,GACHhB,YAAAmB,EAAA,SAAAU,EAAAC,GACKZ,GACFC,EAAAA,OAIAS,MArC8C3B,IAiC1BA,aAAxBzB,YAQAsB,mBAAW2B,MACPN,MAAAA,SAAAA,EAAAA,GAAAA,MAAAA,GAAAA,IAAsBY,MAAOZ,MAAAA,IAAAA,OAAqBR,mBAAkBc,OAApBO,UAA0CP,GAC7FQ,KAAAnC,mBAAAoC,UAAAC,QAAArC,mBAAAoC,UAAAE,QAEDC,WAAAA,qBAAgBC,UACZtC,aACIuC,QAAAtC,YAAAA","file":"../../tasks/serve.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nconst _ = require('lodash');\nconst development_core_1 = require('development-core');\nconst browserSync = require('browser-sync');\nlet StartServer = class StartServer {\n    constructor(info) {\n        this.info = info;\n    }\n    getInfo() {\n        this.info.name = this.info.name || 'web-serve';\n        return this.info;\n    }\n    setup(ctx, gulp) {\n        let option = ctx.option;\n        let files = null;\n        if (option.serverFiles) {\n            files = _.isFunction(option.serverFiles) ? option.serverFiles(ctx) : option.serverFiles;\n        }\n        files = files || [];\n        let dist = ctx.getDist(this.getInfo());\n        let baseDir = null;\n        if (option.serverBaseDir) {\n            baseDir = _.isFunction(option.serverBaseDir) ? option.serverBaseDir(ctx) : option.serverBaseDir;\n        }\n        else {\n            baseDir = dist;\n        }\n        files.push(`${dist}/**/*`);\n        let browsersyncOption = {\n            server: {\n                baseDir: baseDir\n            },\n            open: true,\n            port: process.env.PORT || 3000,\n            files: files\n        };\n        if (option.browsersync) {\n            browsersyncOption = _.extend(browsersyncOption, _.isFunction(option.browsersync) ? option.browsersync(ctx, browsersyncOption) : option.browsersync);\n        }\n        let tkn = ctx.subTaskName(this.info);\n        gulp.task(tkn, (callback) => {\n            browserSync(browsersyncOption, (err, bs) => {\n                if (err) {\n                    callback(err);\n                }\n            });\n        });\n        return tkn;\n    }\n};\nStartServer = __decorate([\n    development_core_1.task({\n        order: (total, ctx) => ctx.env.test ? { value: 0.25, runWay: development_core_1.RunWay.parallel } : 1,\n        oper: development_core_1.Operation.default | development_core_1.Operation.serve\n    }), \n    __metadata('design:paramtypes', [Object])\n], StartServer);\nexports.StartServer = StartServer;\n"]}