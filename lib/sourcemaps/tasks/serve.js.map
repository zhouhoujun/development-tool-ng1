{"version":3,"sources":["tasks/serve.js"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","_typeof","decorate","i","defineProperty","__metadata","k","v","metadata","_","development_core_1","require","browserSync","path","StartServer","info","_classCallCheck","this","_createClass","value","name","files","option","isFunction","ctx","pkg","getPackage","packagePath","jspm","packages","toRootPath","toStr","directories","getInfo","baseDir","test","relpkg","push","getRootPath","dist","browsersyncOption","server","open","PORT","browsersync","port","gulp","task","tkn","callback","err","bs","order","total","env","runWay","RunWay","parallel","oper","subTaskName","Operation","serve"],"mappings":"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","file":"../../tasks/serve.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nconst _ = require('lodash');\nconst development_core_1 = require('development-core');\nconst browserSync = require('browser-sync');\nconst path = require('path');\nlet StartServer = class StartServer {\n    constructor(info) {\n        this.info = info;\n    }\n    getInfo() {\n        this.info.name = this.info.name || 'web-serve';\n        return this.info;\n    }\n    setup(ctx, gulp) {\n        let option = ctx.option.browsersync || {};\n        let files = null;\n        if (option.files) {\n            files = _.isFunction(option.files) ? option.files(ctx) : option.files;\n        }\n        files = files || [];\n        let pkg = ctx.getPackage();\n        let packagePath = '';\n        if (option.jspm && option.jspm.packages) {\n            packagePath = ctx.toRootPath(ctx.toStr(option.jspm.packages));\n        }\n        else {\n            if (pkg.jspm && pkg.jspm && pkg.jspm.directories) {\n                packagePath = ctx.toRootPath(pkg.jspm.directories.packages);\n            }\n        }\n        if (packagePath) {\n            files.push(`${packagePath}/**/*`);\n        }\n        let dist = ctx.getDist(this.getInfo());\n        let baseDir = null;\n        if (option.baseDir) {\n            baseDir = ctx.toRootSrc(_.isFunction(option.baseDir) ? option.baseDir(ctx) : option.baseDir);\n        }\n        else {\n            baseDir = dist;\n        }\n        baseDir = _.isArray(baseDir) ? baseDir : [baseDir];\n        let relpkg = path.relative(_.first(baseDir), packagePath);\n        if (/^\\.\\./.test(relpkg)) {\n            baseDir.push(ctx.getRootPath());\n            baseDir = _.uniq(baseDir);\n        }\n        files.push(`${dist}/**/*`);\n        let browsersyncOption = {\n            server: {\n                baseDir: baseDir\n            },\n            open: true,\n            port: process.env.PORT || 3000,\n            files: files\n        };\n        if (option.browsersync) {\n            browsersyncOption = _.extend(browsersyncOption, _.isFunction(option.browsersync) ? option.browsersync(ctx, browsersyncOption) : option.browsersync);\n        }\n        let tkn = ctx.subTaskName(this.info);\n        gulp.task(tkn, (callback) => {\n            browserSync(browsersyncOption, (err, bs) => {\n                if (err) {\n                    callback(err);\n                }\n            });\n        });\n        return tkn;\n    }\n};\nStartServer = __decorate([\n    development_core_1.task({\n        order: (total, ctx) => ctx.env.test ? { value: 2 / total, runWay: development_core_1.RunWay.parallel } : 1,\n        oper: development_core_1.Operation.default | development_core_1.Operation.serve\n    }), \n    __metadata('design:paramtypes', [Object])\n], StartServer);\nexports.StartServer = StartServer;\n"]}