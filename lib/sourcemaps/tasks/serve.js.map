{"version":3,"sources":["tasks/serve.ts"],"names":[],"mappings":"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","file":"../../tasks/serve.js","sourcesContent":["import * as _ from 'lodash';\r\nimport * as chalk from 'chalk';\r\nimport { TaskCallback, Gulp } from 'gulp';\r\nimport { Src, ITask, ITaskInfo, Operation, task, ITaskContext, RunWay } from 'development-core';\r\nimport { IWebTaskOption } from '../WebTaskOption';\r\nimport * as browserSync from 'browser-sync';\r\nimport * as path from 'path';\r\n\r\n@task({\r\n    // order: (total, ctx) => ctx.env.test ? { value: 2 / total, runWay: RunWay.parallel } : 1, // last order.\r\n    oper: Operation.default | Operation.serve\r\n})\r\nexport class StartServer implements ITask {\r\n    constructor(private info: ITaskInfo) {\r\n    }\r\n    getInfo() {\r\n        this.info.name = this.info.name || 'web-serve';\r\n        return this.info;\r\n    }\r\n    setup(ctx: ITaskContext, gulp: Gulp) {\r\n        let option = (<IWebTaskOption>ctx.option).browsersync || {};\r\n        let watchOptions = option.watchOptions || { ignoreInitial: true, ignored: ['*.txt', '*.map', '*.d.ts'] };\r\n        let files: any[] = [];\r\n        if (option.files) {\r\n            let rf = ctx.to(option.files);\r\n            files = _.isArray(rf) ? rf : [rf];\r\n        }\r\n        if (option.filesByCtx) {\r\n            let dfs = ctx.to(option.filesByCtx);\r\n            if (_.isArray(dfs)) {\r\n                files = files.concat(dfs);\r\n            } else {\r\n                files.push(dfs);\r\n            }\r\n        }\r\n\r\n        let pkg = ctx.getPackage();\r\n        let rootpath = ctx.getRootPath();\r\n        let packagePath = '';\r\n        if (option.jspm && option.jspm.packages) {\r\n            packagePath = ctx.toRootPath(ctx.toStr(option.jspm.packages));\r\n        } else {\r\n            if (pkg.jspm && pkg.jspm && pkg.jspm.directories) {\r\n                packagePath = ctx.toRootPath(pkg.jspm.directories.packages);\r\n            } else {\r\n                packagePath = ctx.toRootPath('./node_modules');\r\n            }\r\n        }\r\n\r\n\r\n        let hascfg = false;\r\n        let pkgname = path.basename(packagePath);\r\n        watchOptions.ignored = _.isArray(watchOptions.ignored) ? watchOptions.ignored : [watchOptions.ignored];\r\n        watchOptions.ignored.push(pkgname + '/**');\r\n        let pkgreg = new RegExp('/^' + pkgname + '\\//', 'gi');\r\n        files = _.map(files || [], it => {\r\n            if (_.isString(it)) {\r\n                if (!hascfg) {\r\n                    hascfg = pkgreg.test(it);\r\n                }\r\n                return {\r\n                    match: it,\r\n                    options: watchOptions\r\n                }\r\n            } else {\r\n                return it;\r\n            }\r\n        });\r\n\r\n        if (!hascfg && packagePath) {\r\n            // files.push(`${path.relative(rootpath, packagePath)}/**`)\r\n            files.push({\r\n                match: `${path.relative(rootpath, packagePath)}/**`,\r\n                options: watchOptions\r\n            });\r\n        }\r\n\r\n        let dist = ctx.getDist(this.getInfo());\r\n        let baseDir: Src = null;\r\n        if (option.baseDir) {\r\n            baseDir = ctx.toRootSrc(_.isFunction(option.baseDir) ? option.baseDir(ctx) : option.baseDir);\r\n        } else {\r\n            baseDir = dist;\r\n        }\r\n        baseDir = _.isArray(baseDir) ? baseDir : [baseDir];\r\n        baseDir.push(path.dirname(packagePath));\r\n        let relpkg = path.relative(_.first(baseDir), packagePath);\r\n        if (/^\\.\\./.test(relpkg)) {\r\n            baseDir.push(rootpath);\r\n        }\r\n\r\n        baseDir = _.uniq(_.map(baseDir, dr => {\r\n            if (path.isAbsolute(dr)) {\r\n                return path.relative(rootpath, dr) || '.';\r\n            } else {\r\n                return dr;\r\n            }\r\n        }));\r\n\r\n\r\n        files.push({\r\n            match: `${path.relative(rootpath, dist)}/**`,\r\n            options: watchOptions\r\n        });\r\n\r\n        let browsersyncOption = <browserSync.Options>_.extend(\r\n            {\r\n                open: true,\r\n                port: process.env.PORT || 3000\r\n            },\r\n            _.omit(option, ['files', 'baseDir', 'jspm']),\r\n            {\r\n                watchOptions: watchOptions,\r\n                server: {\r\n                    baseDir: baseDir\r\n                },\r\n                files: files\r\n            });\r\n\r\n        let tkn = ctx.subTaskName(this.info);\r\n        gulp.task(tkn, (callback: TaskCallback) => {\r\n            browserSync(browsersyncOption, (err, bs) => {\r\n                if (err) {\r\n                    callback(<any>err);\r\n                }\r\n            });\r\n        });\r\n\r\n        return tkn;\r\n    }\r\n}\r\n"]}