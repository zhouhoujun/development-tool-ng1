"use strict";function getPackageFilePath(e,t){var a=path.join(e,t+"@*.js"),n=glob.sync(a);return n&&0!==n.length?a:path.join(e,t+".js")}var __decorate=this&&this.__decorate||function(e,t,a,n){var r,s=arguments.length,i=s<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var o=e.length-1;o>=0;o--)(r=e[o])&&(i=(s<3?r(i):s>3?r(t,a,i):r(t,a))||i);return s>3&&i&&Object.defineProperty(t,a,i),i},__metadata=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},_=require("lodash"),chalk=require("chalk"),development_core_1=require("development-core"),karma=require("karma"),fs=require("fs"),path=require("path"),glob=require("glob"),mkdirp=require("mkdirp"),url=require("url"),KarmaTest=function(){function e(e){this.info=e}return e.prototype.getInfo=function(){return this.info.name=this.info.name||"web-test",this.info},e.prototype.setup=function(e,t){var a=this,n=e.option.karma||{},r=e.subTaskName(this.getInfo());return t.task(r,function(t){var r=n.configFile||path.join(e.env.root,"./karma.conf.js");r=e.toRootPath(r);var s={};require(r)({set:function(e){s=_.extend(s,e)}}),n.config&&(s=n.config(e)),s=_.extend(s,{singleRun:e.env.release||e.env.deploy||e.env.watch!==!0}),n.basePath?s.basePath=e.toStr(n.basePath):_.isUndefined(s.basePath)&&(s.basePath=e.getDist()),s.basePath=e.toRootPath(s.basePath),n.jspm&&(s.files=s.files||[],s=a.initkarmaJspmPlugin(s,e));var i=new karma.Server(s,function(e){1===e?(console.log(chalk.red("Unit Test failures, exiting process"),", code:",chalk.cyan(e)),t("Unit Test failures, exiting process")):(console.log("Unit Tests passed",", code:",chalk.cyan(e)),t())});i.start()}),r},e.prototype.getRelativePaths=function(e,t,a){void 0===a&&(a="");var n={},r=e.getDist(),s=fs.readdirSync(r);_.each(s,function(s){var i=path.join(r,s),o=fs.lstatSync(i);if(o.isDirectory()){var c="/"+s+"/*";n[c]=a+e.toUrl(t,path.join(r,c))}});var i="*";return n[i]=a+e.toUrl(t,path.join(r,i)),n},e.prototype.initkarmaJspmPlugin=function(e,t){var a,n=t.option.karma||{},r=t.getPackage();a=_.isFunction(n.jspm)?n.jspm(t):_.isBoolean(karma)?{}:n.jspm;var s=e.jspm||{},i=t.toUrl(this.checkAdapter(a,t));a.packages?s.packages=t.toRootPath(t.toStr(a.packages)):!s.packages&&r.jspm&&r.jspm.directories?s.packages=t.toRootPath(r.jspm.directories.packages):s.packages&&(s.packages=t.toRootPath(s.packages)),a.config?s.config=t.toDistSrc(t.toSrc(a.config)):!s.config&&r.jspm?s.config=t.toRootPath(r.jspm.configFile):s.config&&(s.config=t.toDistSrc(s.config)),s.config=_.isString(s.config)?t.toUrl(s.config):_.map(s.config,function(e){return t.toUrl(e)}),s.baseURL=t.toStr(a.baseURL||s.baseURL||""),_.isUndefined(a.cachePackages)||(s.cachePackages=a.cachePackages);var o=path.relative(e.basePath,s.packages),c=!1;if(/^\.\./.test(o)){c=!0;var p=e.basePath=t.getRootPath();s.paths=this.getRelativePaths(t,e.basePath);var l=t.toUrl(p,s.packages)+"/*";s.paths[l]="base/"+l;var m=void 0;m=_.isFunction(a.resource)?a.resource(t):a.resource||["public","asserts"];var f=t.toUrl(p,t.getDist());e.proxies=e.proxies||{},e.files=e.files||[],_.each(_.isString(m)?[m]:m,function(a){e.files.push({pattern:t.toUrl(t.toDistPath(a))+"/**",included:!1});var n=/^\//.test(a)?"base"+a:"base/"+a;e.proxies[n]=url.resolve(f,a)}),console.log("paths: ",s.paths),e.proxies=_.extend(e.proxies,s.paths)}s.loadFiles=s.loadFiles||[],s.serveFiles=s.serveFiles||[],a.loadFiles&&(s.loadFiles=s.loadFiles.concat(_.isFunction(a.loadFiles)?a.loadFiles(t):a.loadFiles)),a.serveFiles&&(s.serveFiles=s.serveFiles.concat(_.isFunction(a.serveFiles)?a.serveFiles(t):a.serveFiles)),e.plugins=_.filter(e.plugins||[],function(e){return"karma-jspm"!==e}),e.frameworks=_.filter(e.frameworks||[],function(e){return"jspm"!==e}),e.plugins=e.plugins.concat(_.map(e.frameworks,function(e){return"karma-"+e.toLowerCase()})),e.plugins=e.plugins.concat(_.map(e.reporters,function(e){var t="karma-"+e.toLowerCase()+"-reporter";return r.dependencies[t]||r.devDependencies[t]?t:"karma-"+e})),e.plugins=e.plugins.concat(_.map(e.browsers,function(e){var t="karma-"+e.toLowerCase()+"-launcher";return r.dependencies[t]||r.devDependencies[t]?t:"karma-"+e})),e.plugins=_.uniq(e.plugins);var u=function(e,n,r,o,p){function l(){o.jspm.expandedFiles=_.flatten(_.map(r.loadFiles,function(a){var n=path.join(f,_.isString(a)?a:a.pattern);return e.push(createServedPattern(t.toUrl(n),_.isString(a)?null:a)),_.map(glob.sync(n),function(e){return t.toUrl(f,e)})})),console.log("expandedFiles:",o.jspm.expandedFiles)}console.log("--------------------init karma jspm---------------------\n","base path:",chalk.cyan(n)),r=r||{},r=_.extend(r||{},s),o.jspm=o.jspm||{},void 0!==r.paths&&"object"==typeof r.paths&&(o.jspm.paths=r.paths),void 0!==r.meta&&"object"==typeof r.meta&&(o.jspm.meta=r.meta),o.jspm.useBundles=r.useBundles,o.jspm.stripExtension=r.stripExtension;var m=r.baseURL;o.jspm.baseURL=m||"",console.log("base URL:",chalk.cyan(m));var f=t.toUrl(c?t.getDist():path.join(n,m));console.log("fileBasePath",f);var u=t.toUrl(r.packages),d=t.toUrl(t.toRootPath(t.toStr(r.browser||""))),h=Array.isArray(r.config)?r.config:[r.config];Array.prototype.unshift.apply(e,h.map(function(e){return createPattern(e)})),r.browser&&e.unshift(createPattern(d)),e.unshift(createPattern(i));var g=a.systemjs?t.toSrc(a.systemjs):["system-polyfills.src","system.src"];_.each(_.isArray(g)?g:[g],function(a){e.unshift(createPattern(t.toUrl(getPackageFilePath(u,a))))}),l(),p.on("file_list_modified",l),_.each(r.serveFiles,function(a){e.push(createServedPattern(t.toUrl(path.join(f,_.isString(a)?a:a.pattern))))});var v=createServedPattern(t.toUrl(path.join(u,"!(system-polyfills.src.js|system.src.js)/**")),{nocache:r.cachePackages!==!0});v.watched=!1,e.push(v),console.log("------------------------complete jspm pattern:\n",e)};return u.$inject=["config.files","config.basePath","config.jspm","config.client","emitter"],e.frameworks.unshift("jspmdev"),e.plugins.unshift({"framework:jspmdev":["factory",u]}),e},e.prototype.getDefaultAdapter=function(){return{name:"adapter",template:"\n(function(karma, System) {\n    if (!System) {\n        throw new Error('SystemJS was not found. Please make sure you have ' +\n            'initialized jspm via installing a dependency with jspm, ' +\n            'or by running \"jspm dl-loader\".');\n    }\n\n\n    System.config({ baseURL: karma.config.jspm.baseURL?  'base/'+ karma.config.jspm.baseURL : 'base' });\n    \n\n    var stripExtension = typeof karma.config.jspm.stripExtension === 'boolean' ? karma.config.jspm.stripExtension : true;\n\n    // Prevent immediately starting tests.\n    karma.loaded = function() {\n\n        if (karma.config.jspm.paths !== undefined &&\n            typeof karma.config.jspm.paths === 'object') {\n\n            System.config({\n                paths: karma.config.jspm.paths\n            });\n        }\n\n        if (karma.config.jspm.meta !== undefined &&\n            typeof karma.config.jspm.meta === 'object') {\n            System.config({\n                meta: karma.config.jspm.meta\n            });\n        }\n\n        // Exclude bundle configurations if useBundles option is not specified\n        if (!karma.config.jspm.useBundles) {\n            System.bundles = [];\n        }\n\n        // Load everything specified in loadFiles in the specified order\n        var promiseChain = Promise.resolve();\n        for (var i = 0; i < karma.config.jspm.expandedFiles.length; i++) {\n            promiseChain = promiseChain.then((function(moduleName) {\n                return function() {\n                    return System['import'](moduleName);\n                };\n            })(extractModuleName(karma.config.jspm.expandedFiles[i])));\n        }\n\n        promiseChain.then(function() {\n            karma.start();\n        }, function(e) {\n            karma.error(e.name + ': ' + e.message);\n        });\n    };\n\n    function extractModuleName(fileName) {\n        if (stripExtension) {\n            return fileName.replace(/.js$/, '');\n        }\n        return fileName;\n    }\n})(window.__karma__, window.System);"}},e.prototype.checkAdapter=function(e,t){var a=e.karmaloader,n=this.getDefaultAdapter();a?a.name===n.name&&(console.log(chalk.red('can not rewrite default adapter named: "adapter".')),a=n):a=n;var r=path.join(__dirname,"./adapters",a.name);return/.js$/.test(r)||(r+=".js"),mkdirp.sync(path.dirname(r)),fs.existsSync(r)||fs.writeFileSync(r,a.template,"utf8"),r},e}();KarmaTest=__decorate([development_core_1.task({order:function(e){return{value:2/e,runWay:development_core_1.RunWay.parallel}},oper:development_core_1.Operation.default|development_core_1.Operation.test}),__metadata("design:paramtypes",[Object])],KarmaTest),exports.KarmaTest=KarmaTest;var createPattern=function(e){return{pattern:e,included:!0,served:!0,watched:!1}},createServedPattern=function(e,t){return{pattern:e,included:!!(t&&"included"in t)&&t.included,served:!(t&&"served"in t)||t.served,nocache:!!(t&&"nocache"in t)&&t.nocache,watched:!(t&&"watched"in t)||t.watched}};
//# sourceMappingURL=../sourcemaps/tasks/test.js.map
